{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h5/pages/PreJunior.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/StrongJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","wrapperMessage","src","avatar","message","fromUser","name","messageText","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","buttonTask","Affairs","mappedAffairs","data","map","a","key","affairsWrapper","list","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","notError","group","value","onChange","onKeyPress","e","errorText","button","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","console","log","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","fontSize","borderBottom","color","paddingRight","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","wrapper","Error404","siteContainer","to","link","imageNotFound","alt","Junior","StrongJunior","PATH","Routes","path","exact","render","navbarItems","id","title","progress","useStyles","makeStyles","theme","createStyles","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","textDecoration","activeLink","Header","classes","useTheme","React","open","setOpen","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","variant","noWrap","Drawer","paper","direction","List","item","activeClassName","ListItem","ListItemIcon","ListItemText","primary","component","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b181dfff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperMessage\":\"Message_wrapperMessage__3Wbw0\",\"message\":\"Message_message__8WR15\",\"avatar\":\"Message_avatar__3FT3j\",\"fromUser\":\"Message_fromUser__3SMos\",\"messageText\":\"Message_messageText__tMBZ7\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteContainer\":\"App_siteContainer__3Vkjw\",\"link\":\"App_link__2hN84\",\"imageNotFound\":\"App_imageNotFound__2ZABQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"Greeting_errorText__1pVNf\",\"error\":\"Greeting_error__1uvQ8\",\"notError\":\"Greeting_notError__1-UDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairsWrapper\":\"Affairs_affairsWrapper__1xP7n\",\"list\":\"Affairs_list__2b57a\",\"buttonTask\":\"Affairs_buttonTask__yrKY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PreJunior_wrapper__Pngrc\"};","import React from 'react';\nimport style from './Message.module.css';\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={style.wrapperMessage}>\n            <img src={props.avatar} className={style.avatar}/>\n            <div className={style.message}>\n                <div className={style.fromUser}>{props.name}</div>\n                <div>\n                    <span className={style.messageText}>{props.message}</span>\n                    <span className={style.time}>{props.time}</span>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Helen\",\n    message: \"hey, how are you?\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from 'react';\nimport {AffairType} from './HW2';\nimport style from './Affairs.module.css';\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };// need to fix\n\n    return (\n        <li>\n            {props.affair.name} - {props.affair.priority}\n            <button onClick={deleteCallback} className={style.buttonTask}>X</button>\n        </li>\n    );\n}\n\nexport default Affair;\n","import React from 'react';\nimport Affair from './Affair';\nimport {AffairType, FilterType} from './HW2';\nimport style from './Affairs.module.css';\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.map(a => {\n        return (\n                <Affair // should work\n                    key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n                    affair={a}\n                    deleteAffairCallback={props.deleteAffairCallback}\n                />\n        )\n    })\n\n    const setAll = () => { props.setFilter('all') }; // need to fix\n    const setHigh = () => { props.setFilter('high') };\n    const setMiddle = () => { props.setFilter('middle') };\n    const setLow = () => { props.setFilter('low') };\n\n    return (\n        <div className={style.affairsWrapper}>\n            <ul className={style.list}>\n                {mappedAffairs}\n            </ul>\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from 'react';\nimport Affairs from './Affairs';\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'; // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}; // need to fix any\nexport type FilterType = 'all' | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'Anime', priority: 'low'},\n    {_id: 3, name: 'Games', priority: 'low'},\n    {_id: 4, name: 'Work', priority: 'high'},\n    {_id: 5, name: 'Html & css', priority: 'middle'}\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'low') {\n        return affairs.filter(a => a.priority === 'low');\n    } else if (filter === 'middle') {\n        return affairs.filter(a => a.priority === 'middle');\n    } else if (filter === 'high') {\n        return affairs.filter(a => a.priority === 'high');\n    } else {\n        return affairs;\n    } // need to fix\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id); // need to fix\n}\n\nfunction HW2() {\n\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all');\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport s from './Greeting.module.css';\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = ({name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error === 'Error!' ? s.error : s.notError; // need to fix with (?:)\n\n    const onEnterPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if(e.key === 'Enter') {\n            addUser();\n        }\n    }\n\n    return (\n        <div className={s.group}>\n            <input value={name} onChange={setNameCallback} className={inputClass} onKeyPress={onEnterPress}/>\n            {error && <span className={s.errorText}>{error}</span>}\n            <div>\n                <button className={s.button} onClick={addUser}>Add</button>\n                <span>{totalUsers}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from 'react';\nimport Greeting from './Greeting';\nimport {UserType} from './HW3';\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(''); // need to fix any\n    let [error, setError] = useState<string>(''); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value); // need to fix\n        setError('');\n    };\n\n    const addUser = () => {\n        if (name !== '') {\n            console.log(`Hello ${name} !`);\n            addUserCallback(name);\n            setName('');\n        } else {\n            setError('Error!');\n        }\n         // need to fix\n    };\n\n    const totalUsers: number = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        setUsers([...users, {_id: v1(), name: name} ]); // need to fix\n    }\n    console.log(users); // ???????????\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\nimport s from './SuperInputText.module.css';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === 'Enter' // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n            setText('');\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div>\n                {/*should work (должно работать)*/}\n                <div>\n                    <SuperInputText\n                        value={text}\n                        onChangeText={setText}\n                        onEnter={showAlert}\n                        error={error}\n                        /*className={s.blue}*/ // проверьте, рабоет ли смешивание классов\n                    />\n                </div>\n                {/*should work (должно работать)*/}\n                <div>\n                    <SuperButton\n                        red // пропсу с булевым значением не обязательно указывать true\n                        onClick={showAlert}\n                    >\n                        Delete {/*// название кнопки попадёт в children*/}\n                    </SuperButton>\n                </div>\n                <div>\n                    {/*should work (должно работать)*/}\n                    <SuperCheckbox\n                        checked={checked}\n                        onChangeChecked={setChecked}\n                    >\n                        Some text {/*// этот текст попадёт в children*/}\n                    </SuperCheckbox>\n                </div>\n                <div>\n                    {/*// onChange тоже должен работать*/}\n                    <SuperCheckbox checked={checked} onChange={testOnChange}/>\n                </div>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react';\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const editableSpanStyle = {\n        fontSize: 'large',\n        borderBottom: '2px solid gray',\n        color: 'gray'\n    }\n    const symbolSpanStyle = {\n        color: 'black',\n        fontSize: '25px',\n        paddingRight: '5px'\n    }\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        style={editableSpanStyle}\n\n                        {...restSpanProps}\n                    >\n                        <span style={symbolSpanStyle}>&#9998;</span>\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        setValue(restoreState<string>(\"editable-span-value\", value));\n    };\n\n    return (\n        <div>\n            <hr/>\n            Homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"Enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\nimport style from \"./PreJunior.module.css\"\n\nexport function PreJunior() {\n    return (\n        <div className={style.wrapper}>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    );\n}\n","import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport style from './../../../p1-main/m1-ui/u1-app/App.module.css'\n\nexport function Error404() {\n    return (\n        <div className={style.siteContainer}>\n            <h2>404 Page not found!</h2>\n            <NavLink to=\"/pre-junior\" className={style.link}>\n                <p>ฅ/ᐠ. ̫ .ᐟ\\ฅ back to homepage</p>\n            </NavLink>\n            <div>\n                <img\n                    src=\"https://cs9.pikabu.ru/post_img/big/2016/09/28/7/147505714417231160.jpg\"\n                    className={style.imageNotFound} alt='imageNotFound'/>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport function Junior() {\n    return (\n        <div>\n            Junior\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport function StrongJunior() {\n    return (\n        <div>\n            Strong Junior\n        </div>\n    );\n}\n","import React from 'react';\nimport {Route, Redirect, Switch} from 'react-router-dom';\nimport {PreJunior} from './pages/PreJunior';\nimport {Error404} from './pages/Error404';\nimport { Junior } from './pages/Junior';\nimport {StrongJunior} from './pages/StrongJunior';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    STRONG_JUNIOR: '/strong-junior'\n    // add paths\n}\n\nexport function Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.STRONG_JUNIOR} render={() => <StrongJunior/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport clsx from 'clsx';\nimport {createStyles, makeStyles, useTheme, Theme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Routes} from './Routes';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAlt';\nimport {v1} from \"uuid\";\n\ntype NavbarItemsType = {\n    id: string\n    title: string\n    path: string\n    progress?: string\n}\n\nconst navbarItems: Array<NavbarItemsType> = [\n    {id: v1(), title: 'Pre-Junior', path: '/pre-junior', progress: 'BatteryCharging20Icon'},\n    {id: v1(), title: 'Junior', path: '/junior'},\n    {id: v1(), title: 'Strong-Junior', path: '/strong-junior'}\n]\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n        },\n        drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerClose: {\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: theme.spacing(7) + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9) + 1,\n            },\n        },\n        toolbar: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar,\n        },\n        content: {\n            flexGrow: 1,\n            padding: '50px',\n        },\n        link: {\n            textDecoration: 'none',\n            color: 'black'\n        },\n        activeLink: {\n            color: '#de1479'\n        }\n    }),\n);\n\nexport function Header() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open sidebar\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Choose level\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                    </IconButton>\n                </div>\n                <List>\n                    {navbarItems.map((item) => (\n                        <NavLink key={item.id} to={item.path} className={classes.link} activeClassName={classes.activeLink}>\n                            <ListItem button key={item.title}>\n                                <ListItemIcon>\n                                    <SentimentSatisfiedAltIcon color='secondary'/>\n                                </ListItemIcon>\n                                <ListItemText primary={item.title}/>\n                            </ListItem>\n                        </NavLink>\n                    ))}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <Typography component={'span'}>\n                    <Routes/>\n                </Typography>\n            </main>\n        </div>\n    )\n}","import React from 'react';\nimport {Header} from './Header';\nimport {HashRouter} from 'react-router-dom';\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n                <Header/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\n//import HW1 from \"../../../p2-homeworks/h1/HW1\";\n//import HW2 from \"../../../p2-homeworks/h2/HW2\";\n//import HW3 from '../../../p2-homeworks/h3/HW3';\n//import HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}