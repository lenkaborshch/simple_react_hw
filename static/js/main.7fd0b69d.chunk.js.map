{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/StrongJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","wrapperMessage","src","avatar","message","fromUser","name","messageText","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","buttonTask","Affairs","mappedAffairs","data","map","a","key","affairsWrapper","list","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","notError","group","value","onChange","onKeyPress","e","errorText","button","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","console","log","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","column","PreJunior","Error404","siteContainer","to","link","imageNotFound","alt","Junior","StrongJunior","PATH","Routes","path","exact","render","navbarItems","title","progress","useStyles","makeStyles","theme","createStyles","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","textDecoration","color","activeLink","Header","classes","useTheme","React","open","setOpen","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","variant","noWrap","Drawer","paper","direction","List","item","ListItem","ListItemIcon","activeClassName","ListItemText","primary","component","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7fd0b69d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperMessage\":\"Message_wrapperMessage__2w56H\",\"message\":\"Message_message__255LR\",\"avatar\":\"Message_avatar__3B45g\",\"fromUser\":\"Message_fromUser__57oeY\",\"messageText\":\"Message_messageText__3a5bX\",\"time\":\"Message_time__3OE2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteContainer\":\"App_siteContainer__1rWFk\",\"link\":\"App_link__DzUCd\",\"imageNotFound\":\"App_imageNotFound__1D4wE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"Greeting_errorText__1PH-z\",\"error\":\"Greeting_error__396Du\",\"notError\":\"Greeting_notError__2JfZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairsWrapper\":\"Affairs_affairsWrapper__3OngR\",\"list\":\"Affairs_list__3hIqA\",\"buttonTask\":\"Affairs_buttonTask__VZ0Qy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Bvuw\",\"errorInput\":\"SuperInputText_errorInput__2muEH\",\"error\":\"SuperInputText_error__3Wpxm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Sd5X\",\"red\":\"SuperButton_red__2wzYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__20S9c\",\"spanClassName\":\"SuperCheckbox_spanClassName__gLNld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__vHsPb\",\"column\":\"HW4_column__fppdm\"};","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={style.wrapperMessage}>\r\n            <img src={props.avatar} className={style.avatar}/>\r\n            <div className={style.message}>\r\n                <div className={style.fromUser}>{props.name}</div>\r\n                <div>\r\n                    <span className={style.messageText}>{props.message}</span>\r\n                    <span className={style.time}>{props.time}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Helen\",\r\n    message: \"hey, how are you?\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from 'react';\r\nimport {AffairType} from './HW2';\r\nimport style from './Affairs.module.css';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    };// need to fix\r\n\r\n    return (\r\n        <li>\r\n            {props.affair.name} - {props.affair.priority}\r\n            <button onClick={deleteCallback} className={style.buttonTask}>X</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from 'react';\r\nimport Affair from './Affair';\r\nimport {AffairType, FilterType} from './HW2';\r\nimport style from './Affairs.module.css';\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map(a => {\r\n        return (\r\n                <Affair // should work\r\n                    key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n                    affair={a}\r\n                    deleteAffairCallback={props.deleteAffairCallback}\r\n                />\r\n        )\r\n    })\r\n\r\n    const setAll = () => { props.setFilter('all') }; // need to fix\r\n    const setHigh = () => { props.setFilter('high') };\r\n    const setMiddle = () => { props.setFilter('middle') };\r\n    const setLow = () => { props.setFilter('low') };\r\n\r\n    return (\r\n        <div className={style.affairsWrapper}>\r\n            <ul className={style.list}>\r\n                {mappedAffairs}\r\n            </ul>\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from 'react';\r\nimport Affairs from './Affairs';\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'; // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}; // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'Anime', priority: 'low'},\r\n    {_id: 3, name: 'Games', priority: 'low'},\r\n    {_id: 4, name: 'Work', priority: 'high'},\r\n    {_id: 5, name: 'Html & css', priority: 'middle'}\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'low') {\r\n        return affairs.filter(a => a.priority === 'low');\r\n    } else if (filter === 'middle') {\r\n        return affairs.filter(a => a.priority === 'middle');\r\n    } else if (filter === 'high') {\r\n        return affairs.filter(a => a.priority === 'high');\r\n    } else {\r\n        return affairs;\r\n    } // need to fix\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id); // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Greeting.module.css';\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = ({name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error === 'Error!' ? s.error : s.notError; // need to fix with (?:)\r\n\r\n    const onEnterPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter') {\r\n            addUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.group}>\r\n            <input value={name} onChange={setNameCallback} className={inputClass} onKeyPress={onEnterPress}/>\r\n            {error && <span className={s.errorText}>{error}</span>}\r\n            <div>\r\n                <button className={s.button} onClick={addUser}>Add</button>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport Greeting from './Greeting';\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(''); // need to fix any\r\n    let [error, setError] = useState<string>(''); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value); // need to fix\r\n        setError('');\r\n    };\r\n\r\n    const addUser = () => {\r\n        if (name !== '') {\r\n            console.log(`Hello ${name} !`);\r\n            addUserCallback(name);\r\n            setName('');\r\n        } else {\r\n            setError('Error!');\r\n        }\r\n         // need to fix\r\n    };\r\n\r\n    const totalUsers: number = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([...users, {_id: v1(), name: name} ]); // need to fix\r\n    }\r\n    console.log(users); // ???????????\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\r\nimport s from './SuperInputText.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === 'Enter' // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n            setText('');\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    /*className={s.blue}*/ // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    Delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    Some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nexport function PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport style from './../../../p1-main/m1-ui/u1-app/App.module.css'\r\n\r\nexport function Error404() {\r\n    return (\r\n        <div className={style.siteContainer}>\r\n            <h2>404 Page not found!</h2>\r\n            <NavLink to=\"/pre-junior\" className={style.link}>\r\n                <p>ฅ/ᐠ. ̫ .ᐟ\\ฅ back to homepage</p>\r\n            </NavLink>\r\n            <div>\r\n                <img\r\n                    src=\"https://cs9.pikabu.ru/post_img/big/2016/09/28/7/147505714417231160.jpg\"\r\n                    className={style.imageNotFound} alt='imageNotFound'/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Junior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function StrongJunior() {\r\n    return (\r\n        <div>\r\n            Strong Junior\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Route, Redirect, Switch} from 'react-router-dom';\r\nimport {PreJunior} from './pages/PreJunior';\r\nimport {Error404} from './pages/Error404';\r\nimport { Junior } from './pages/Junior';\r\nimport {StrongJunior} from './pages/StrongJunior';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    STRONG_JUNIOR: '/strong-junior'\r\n    // add paths\r\n}\r\n\r\nexport function Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.STRONG_JUNIOR} render={() => <StrongJunior/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, useTheme, Theme} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Routes} from './Routes';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAlt';\r\n\r\ntype NavbarItemsType = {\r\n    title: string\r\n    path: string\r\n    progress?: string\r\n}\r\n\r\nconst navbarItems: Array<NavbarItemsType> = [\r\n    {title: 'Pre-Junior', path: '/pre-junior', progress: 'BatteryCharging20Icon'},\r\n    {title: 'Junior', path: '/junior'},\r\n    {title: 'Strong-Junior', path: '/strong-junior'}\r\n]\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: '50px',\r\n        },\r\n        link: {\r\n            textDecoration: 'none',\r\n            color: 'black'\r\n        },\r\n        activeLink: {\r\n            color: '#de1479'\r\n        }\r\n    }),\r\n);\r\n\r\nexport function Header() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open sidebar\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Choose level\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <List>\r\n                    {navbarItems.map((item) => (\r\n                        <ListItem button key={item.title}>\r\n                            <ListItemIcon>\r\n                                <SentimentSatisfiedAltIcon color='secondary'/>\r\n                            </ListItemIcon>\r\n                            <NavLink to={item.path} className={classes.link} activeClassName={classes.activeLink}><ListItemText primary={item.title}/></NavLink>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Typography component={'span'}>\r\n                    <Routes/>\r\n                </Typography>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Header/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\n//import HW1 from \"../../../p2-homeworks/h1/HW1\";\r\n//import HW2 from \"../../../p2-homeworks/h2/HW2\";\r\n//import HW3 from '../../../p2-homeworks/h3/HW3';\r\n//import HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}